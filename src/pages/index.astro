---
import { getCollection } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import BlogCard from "../components/BlogCard.astro";
import Footer from "../components/Footer.astro";
import GithubCard from "../components/GithubCard.astro";
import Header from "../components/Header.astro";
import TechnologyTag from "../components/TechnologyTag.astro";
import { SITE_DESCRIPTION, SITE_TITLE } from "../consts";

const posts = (await getCollection("blog"))
  .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf())
  .slice(0, 3);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="flex w-screen justify-center dark:bg-slate-800 dark:text-white">
    <div class="w-full max-w-screen-lg px-4">
      <Header />

      <main class="px-4">
        <div class="flex flex-col gap-y-4">
          <h1 class="text-4xl">Daniel Williams</h1>

          <p>
            I'm an experienced developer with 10 years experience, I'm
            specialised in React and React Native with experience across the
            tech stack for web and mobile applications.
          </p>

          <div class="flex w-full flex-row flex-wrap gap-4">
            <TechnologyTag
              name="React Native"
              svg="react"
              highlightColor="sky"
            />

            <TechnologyTag name="ReactJS" svg="react" highlightColor="sky" />

            <TechnologyTag
              name="Typescript"
              svg="typescript"
              highlightColor="blue"
            />

            <TechnologyTag
              name="Javascript"
              svg="javascript"
              highlightColor="yellow"
            />

            <TechnologyTag
              name="Storybook"
              svg="storybook"
              highlightColor="pink"
            />
          </div>

          <div class="mt-10 flex flex-col gap-y-4">
            <h2 class="text-3xl">Open source projects</h2>

            <p class="mb-4">
              I'm a maintainer of React Native Storybook and other supporting
              libraries. I've also recently gotten involved with maintaining
              Create Expo Stack.
            </p>

            <div class="flex w-full flex-row flex-wrap gap-4">
              <GithubCard
                name="storybookjs/react-native"
                tagLine="ðŸ““ Storybook for React Native!"
                href="https://github.com/storybookjs/react-native"
                language="TypeScript"
                languageColor="bg-blue-500"
                stars={1_000}
              />

              <GithubCard
                name="storybookjs/addon-react-native-web"
                tagLine="Build react-native-web projects in Storybook for React"
                href="https://github.com/storybookjs/addon-react-native-web"
                language="TypeScript"
                languageColor="bg-blue-500"
                stars={75}
              />

              <GithubCard
                name="roninoss/create-expo-stack"
                tagLine="CLI tool to initialize a React Native application with Expo. Provides options to include Typescript, file-based routing via Expo Router, configuration based routing via pure React Navigation, styling via Nativewind, Restyle, Unistyles, StyleSheets, or Tamagui, and/or backend as a service such as Firebase and Supabase."
                href="https://github.com/roninoss/create-expo-stack"
                language="TypeScript"
                languageColor="bg-blue-500"
                stars={1200}
              />

              <GithubCard
                name="dannyhw"
                tagLine="For more visit my github profile..."
                href="https://github.com/dannyhw"
              />
            </div>
          </div>

          <div class="mt-10 flex flex-col gap-y-4">
            <h2 class="text-3xl">Recent Blog Posts</h2>

            <ul class="m-0 flex list-none flex-wrap gap-4 p-0 md:gap-8">
              {
                posts.map((post, i) => (
                  <BlogCard post={post} lazyLoad={i !== 0} />
                ))
              }
            </ul>
          </div>
        </div>
      </main>

      <Footer />
    </div>
  </body>
</html>
